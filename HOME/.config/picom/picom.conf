# ____ ___ ____ ___  __  __
#|  _ \_ _/ ___/ _ \|  \/  |
#| |_) | | |  | | | | |\/| |
#|  __/| | |__| |_| | |  | |
#|_|  |___\____\___/|_|  |_|.conf

# > Animations
# >> Transitions
# --- Require
# -- https://github.com/jonaburg/picom
transition-length = 100;
transition-pow-x = 0.1;
transition-pow-y = 0.1;
transition-pow-w = 0.1;
transition-pow-h = 0.1;
size-transition = false;

# >> Fading
fading = true;
fade-in-step  = 0.03;
fade-out-step = 0.06;
fade-delta    = 10;
fade-exclude = [
  "class_g = 'slop'", # maim
];

# > Rounding
# --- Require
# -- https://github.com/sdhand/compton,
# -- https://github.com/jonaburg/picom or
# -- https://github.com/ibhagwan/picom
# >> Corners
corner-radius = 8;
rounded-corners-exclude = [
  "QTILE_INTERNAL:32c = 1",
  "class_g = 'Aseprite'",
  "class_g = 'Dunst'",
  "class_g = 'Polybar'",
  "class_g = 'awesome'",
  "class_g = 'dwm'",
];
detect-rounded-corners = true;

# >> Borders
round-borders = 1;
round-borders-exclude = [
  "class_g = 'Aseprite'",
  "QTILE_INTERNAL:32c = 1"
];

# > Shadows
# --- Desktop windows only get shadows if specifically requested to in wintypes
shadow          = false;
shadow-offset-x = -7;
shadow-offset-y = -7;
shadow-opacity  = .5;
shadow-radius   = 7;
shadow-exclude = [
  "QTILE_INTERNAL:32c = 1",
  "_GTK_FRAME_EXTENTS@:c",
  "class_g = 'Aseprite'",
  "class_g = 'Cairo-clock'",
  "class_g = 'Conky'",
  "class_g = 'Dunst'",
  "class_g = 'Polybar'",
  "class_g = 'awesome'",
  "class_g = 'dwm'",
  "class_g = 'slop'",
  "class_g ?= 'Notify-osd'",
  "name = 'Notification'",
];

# > Opacity
inactive-opacity = 1.0; # 1.0
frame-opacity = 1.0; # 1.0

# --- Make sure to change the options in wintypes.
popup_menu = { opacity = 0.8; };
dropdown_menu = { opacity = 0.8; }; 

# --- Let inactive opacity set by -i
# -- override the '_NET_WM_OPACITY' values of windows.
inactive-opacity-override = false;

# --- Detect '_NET_WM_OPACITY' on client windows, useful for window managers
# -- not passing '_NET_WM_OPACITY' of client windows to frame windows.
detect-client-opacity = true;

# > Dim
# --- Default opacity for active windows.
active-opacity = 1.0;

# --- Dimming for inactive windows.
inactive-dim = 0.05;

# --- Use fixed inactive dim value,
# -- instead of adjusting according to window opacity.
# inactive-dim-fixed = 1.0

# --- Specify a list of opacity rules 
# --- Example:
# -- opacity-rule = [ "80:class_g = 'URxvt'" ];
opacity-rule = [
  "100:class_g    = 'Alacritty'",
  "100:class_g    = 'Aseprite'",
  "100:class_g    = 'Bar'", # lemonbar
  "100:class_g    = 'Meld'",
  "100:class_g    = 'Polybar'",
  "100:class_g    = 'Thunderbird'",
  "100:class_g    = 'URxvt'",
  "100:class_g    = 'XTerm'",
  "100:class_g    = 'awesome'",
  "100:class_g    = 'code-oss'",
  "100:class_g    = 'firefox'",
  "100:class_g    = 'kitty'",
  "100:class_g    = 'neovide'",
  "100:class_g    = 'slop'",
  "100:window_type= 'menu'",
  "100:window_type= 'tooltip'",
  "95:window_type = 'dropdown_menu'",
  "95:window_type = 'popup_menu'",
];

# > Blurring
blur: {
  # --- Require
  # -- https://github.com/jonaburg/picom or
  # -- https://github.com/ibhagwan/picom

  # Can be "dual_kawase", "kernel" or "none".
  method = "none";

  #deviation = 1.0;
  #kernel = "11x11gaussian";

  strength = 6;
  background = false;
  background-frame = false;
  background-fixed = false;
  kern = "3x3box";
}

# --- Specify windows that shouldn't be blurred.
blur-background-exclude = [
  "_GTK_FRAME_EXTENTS@:c",
  "class_g = 'Aseprite'",
  "class_g = 'Dunst'",
  "class_g = 'Polybar'",
  "class_g = 'notify-osd'",
  "class_g = 'slop'",
  "window_type = 'dropdown_menu'",
  "window_type = 'menu'",
  "window_type = 'popup_menu'",
  "window_type = 'tooltip'",
];

# > General
# --- May cause issues with bad drivers.
daemon = false;

experimental-backends = true;

# --- Can be `glx`, `xrender` or `xr_glx_hybrid`
backend = "glx";

vsync = true;
mark-wmwin-focused = true;
mark-ovredir-focused = true;

# > Refresh rate
# --- Specify refresh rate of the screen. If not specified or 0, picom will 
# -- try detecting this with X RandR extension.
refresh-rate = 0

# --- Limit picom to repaint at most once every 1 / 'refresh_rate' second to 
# -- boost performance. This should not be used with 
# -- `vsync drm/opengl/opengl-oml`
# -- as they essentially does sw-opti's job already, 
# -- unless you wish to specify a lower refresh rate than the actual value.
#sw-opti = 

# > Focus
# --- Specify a list of conditions of windows that should always be considered focused.
focus-exclude = [
  "QTILE_INTERNAL:32c = 1",
  "class_g = 'Bar'",
  "class_g = 'Cairo-clock'",
  "class_g = 'awesome'",
  "class_g = 'dwm'",
  "class_g = 'polybar'",
  "class_g = 'slop'",
];

# --- Use EWMH '_NET_ACTIVE_WINDOW' to determine currently focused window, 
# -- rather than listening to 'FocusIn'/'FocusOut' event. Might have more accuracy, 
# -- provided that the WM supports it.
#use-ewmh-active-win = false

# --- Use 'WM_TRANSIENT_FOR' to group windows, and consider windows 
# -- in the same group focused at the same time.
detect-transient = true

# --- Use 'WM_CLIENT_LEADER' to group windows, and consider windows in the same 
# -- group focused at the same time. 'WM_TRANSIENT_FOR' has higher priority if 
# -- detect-transient is enabled, too.
detect-client-leader = true

# > Unredirect
# --- Unredirect all windows if a full-screen opaque window is detected, 
# -- to maximize performance for full-screen windows. Known to cause flickering 
# -- when redirecting/unredirecting windows. paint-on-overlay may make the flickering less obvious.
#
#unredir-if-possible = false

# --- Delay before unredirecting the window, in milliseconds. Defaults to 0.
#unredir-if-possible-delay = 0

# --- Conditions of windows that shouldn't be considered full-screen for unredirecting screen.
#unredir-if-possible-exclude = []


# --- Specify a list of conditions of windows that should be painted with inverted color. 
# --- Resource-hogging, and not well tested.
#invert-color-include = []

# > Damage
# --- Resize damaged region by a specific number of pixels. 
# --- A positive value enlarges it while a negative one shrinks it. 
# --- If the value is positive, those additional pixels will not be actually painted 
# -- to screen, only used in blur calculation, and such. (Due to technical limitations, 
# -- with use-damage, those pixels will still be incorrectly painted to screen.) 
# --- Primarily used to fix the line corruption issues of blur, 
# -- in which case you should use the blur radius value here 
# -- (e.g. with a 3x3 kernel, you should use `--resize-damage 1`, 
# -- with a 5x5 one you use `--resize-damage 2`, and so on). 
# --- May or may not work with *--glx-no-stencil*. Shrinking doesn't function correctly.
#resize-damage = 1

# --- `use-damage = true` causes weird black semi opaque rectangles when terminal is opened.
# -- Changing use-damage to false fixes the problem.
use-damage = false

# --- Use X Sync fence to make sure draw call are finished
# -- before picom starts drawing.
# --- May be needed on nvidia-drivers with GLX.
#xrender-sync-fence = false

# > GLX backend
# --- Avoid rebinding pix map on window damage.
# --- Can improve performance but can break things.
# -- Recommended if it works.
#glx-no-rebind-pixmap = false

# --- Avoid using stencil buffer, useful if you don't have a stencil buffer. 
# --- Might cause incorrect opacity when rendering transparent content (but never 
# -- practically happened) and may not work with blur-background. 
# --- My tests show a 15% performance boost. Recommended.
#glx-no-stencil = false

# --- Use specified GLSL fragment shader for rendering window contents. 
# --- See `compton-default-fshader-win.glsl` and `compton-fake-transparency-fshader-win.glsl` 
# -- in the source tree for examples.
#glx-fshader-win = ''

# > Blending
# --- Force all windows to be painted with blending. Useful if you 
# -- have a glx-fshader-win that could turn opaque pixels transparent.
#force-win-blend = false

# --- Make transparent windows clip other windows like non-transparent windows do,
# -- instead of blending on top of them.
transparent-clipping = false;

# > EWMH
# --- Do not use EWMH to detect fullscreen windows. 
# --- Reverts to checking if a window is
# -- fullscreen based only on its size and coordinates.
#no-ewmh-fullscreen = false;

# > Brightness
# --- Dims bright windows so their brightness
# -- doesn't exceed this value.
# --- Brightness of a window is estimated by
# -- averaging all pixels in the window, 
# -- so this could comes with a performance hit. 
# --- Setting this to 1.0 disables this behaviour. 
# --- Requires --use-damage to be disabled.
#max-brightness = 1.0;

# > Logging
# >> Log level
# --- Set the log level.
# --- Possible values: "trace", "debug", "info", "warn", or "error".
log-level = "info";

# >> Log file
# --- If it is not set, logs will be written to stderr.
#log-file = '/path/to/your/log/file'

# --- Write process ID to a file.
#write-pid-path = '/path/to/your/log/file'

# >> X errors
# --- Used for debugging.
#show-all-xerrors = false


# > Window types
# --- 'WINDOW_TYPE' can be (as defined in EWMH:
# -- "unknown", "desktop", "dock", "toolbar", "menu", "utility",
# -- "splash", "dialog", "normal", "dropdown_menu", "popup_menu",
# -- "tooltip", "notification", "combo", or "dnd".
# 
# - fade, shadow
#   --- Controls window-type-specific shadow and fade settings.
# 
# - opacity
#   --- Controls default opacity of the window type.
#
# - focus
#   --- Controls whether the window of this type is to be always considered focused. 
#   --- By default, all window types except "normal" and "dialog" have this on.
#
# - full-shadow
#   --- Controls whether shadow is drawn under the parts of the window that you 
#   -- normally won't be able to see. Useful when the window has parts of it 
#   -- transparent, and you want shadows in those areas.
#
# - redir-ignore
#   --- Controls whether this type of windows should cause screen to become
#   -- redirected again after been unredirected. If you have unredir-if-possible
#   -- set, and doesn't want certain window to cause unnecessary screen redirection,
#   -- you can set this to `true`.
wintypes:
{
  normal = { fade = true; };
  tooltip = { fade = true; shadow = true; opacity = 0.75; focus = true; full-shadow = false; };
  dock = { shadow = false; };
  dnd = { shadow = false; };
  popup_menu = { opacity = 0.8; }; # You shall find
  dropdown_menu = { opacity = 0.8; }; # You shall find
};

